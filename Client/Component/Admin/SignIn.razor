@using Blazored.LocalStorage;
@using Client.Providers;
<main class="admin-area-main">
    <div class="d-flex w-100 min-vh-90 justify-content-center align-items-center">
        <div class="row">
            <div class="col shadow-no-hover p-5" style="background-color: grey;">
                @if (_signInSuccessful == true) {
                    <h3 class="text-center my-3">Sign in successful</h3>
                }
                else {
                    <h3 class="text-center fw-bold">You must be signed in to access the admin area</h3>
                    <h5 class="text-center mt-2 mb-5">After signing in you will be remembered for 4 weeks</h5>

                    <EditForm Model="_user" OnSubmit="SignInUser">
                        <DataAnnotationsValidator />

                        <div class="form-group my-3">
                            <label for="email">Email address</label>
                            <InputText @bind-Value="_user.EmailAddress" id="email" class="form-control" />
                            <ValidationMessage For="@(() => _user.EmailAddress)" />
                        </div>
                        <div class="form-group my-3">
                            <label for="password">Password</label>
                            <InputText @bind-Value="_user.Password" id="email" class="form-control" />
                            <ValidationMessage For="@(() => _user.Password)" />
                        </div>

                        <ValidationSummary />

                        <button type="submit" class="btn btn-primary shadow w-100 md-f-size-1-5">
                            Sign in
                        </button>
                    </EditForm>
                }
            </div>
        </div>
    </div>
    <div class="position-fixed bottom-0 end-5 z-index-5">
        @if (_signInSuccessful == true) {
            <Toast IsError="false"
                    ToastTitle="Sign in successful"
                    ToastBody="You should be redirected automatically within a few seconds."
                    ParentMethodToCallOnClickBtnClose="() => _signInSuccessful = false" />
        }
        @if (_signInAttempFailed == true) {
            <Toast IsError="true"
                   ToastTitle="Sign in attemp failed"
                   ToastBody="Please try again and if the issue persists contant to the administrator."
                   ParentMethodToCallOnClickBtnClose="() => _signInAttempFailed = false" />
        }
    </div>
</main>

@code {
[Inject] HttpClient httpClient { get; set; }
[Inject] ILocalStorageService localStorageServices { get; set; }
[Inject] AuthenticationStateProvider authentivationStateProvider { get; set; }
[Inject] NavigationManager navigationManager { get; set; }
private bool _signInAttempFailed = false;
private bool _signInSuccessful = false;
private User _user = new();


private async Task SignInUser() {
    var response = await httpClient.PostAsJsonAsync<User>(ApiEndpoints.s_signIn, _user);

    if (response.IsSuccessStatusCode == false) {
        _signInAttempFailed = true;
    }
    else {
        string JSONWebTocke = await response.Content.ReadAsStringAsync();
        await localStorageServices.SetItemAsync("bearerToken", JSONWebTocke);

        await ((AppAuthenticationStateProvider)authentivationStateProvider).SignIn();
        httpClient.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("bearer", JSONWebTocke);
        _signInSuccessful = true;

        navigationManager.NavigateTo("/admin");
    }
}
}