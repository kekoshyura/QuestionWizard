@page "/admin/surveys/create"
@using System.Net
@using Client.Component.Admin

<main class="admin-area-main">
    <SideBar />

    <div class="admin-area-content container-fluid bg-white">
        <div class="row g-0">
            <div class="col">
                <h1 class="mb-4">@(_createSuccessful ? "Success! Go back to all surveys." : "Create Survey")</h1>
                @if(_attempingToCreate == true) {
                    <h1>Creating survey...</h1>
                    <LoadingDot />
                } else if(_createSuccessful == false && _attempingToCreate == false) {
                    <EditForm Model="_surveyToCreate" OnValidSubmit="CreateSurvey">
                        <DataAnnotationsValidator />

                        <div class="form-group mb-5">
                            <label for="surveyDescription">Survey Title</label>
                            <InputText @bind-Value="_surveyToCreate.Title" class="form-control" id="surveyDescription"></InputText>
                        </div>
                       
                        <div class="form-group mb-5">
                            <label for="surveyDescription">Survey Description</label>
                            <InputText @bind-Value="_surveyToCreate.Description" class="form-control" id="surveyDescription"></InputText>
                        </div>
                        @if (databaseCache.Sections == null) {
                            <LoadingDot />
                        }
                        else {
                            <div class="form-group wb-5">
                                <label for="surveyCategory">Category</label>
                                <InputSelect @bind-Value="@_surveyToCreate.SectionId" class="form-control" id="surveyCategory">
                                    @foreach (var category in databaseCache.Sections) {
                                        <option value="@category.Id">@category.Title</option>
                                    }
                                </InputSelect>
                            </div>
                        }
                        
                        <ValidationSummary />

                        <button class="btn btn-success shadow d-block mt-5 md-f-size-1-5" type="submit">
                            <i class="far fa-save"></i> Save
                        </button>
                    </EditForm>
                }

                <a href="/admin/surveys" class="btn btn-primary shadow mt-5 md-f-size-1-5">
                    <i class="fas fa-arrow-left"></i> Back to all surveys
                </a>
            </div>
        </div>
    </div>
</main>

@code{
    [Inject] HttpClient httpClient { get; set; }
    protected async override Task OnInitializedAsync() {
            if (databaseCache.Sections == null) {
                await databaseCache.GetSectionsFromDbCache();
                StateHasChanged();
        }

    }


    [Inject] DatabaseCache databaseCache { get; set; }

    private SurveyModel _surveyToCreate = new SurveyModel {Questions = new List<QuestionModel>() };
    private bool _attempingToCreate = false;
    private bool _attempingToCreateFailed = false;
    private bool _createSuccessful = false;

    private async Task CreateSurvey() {
        _attempingToCreate = true;

        HttpResponseMessage response = await httpClient.PostAsJsonAsync<SurveyModel>(ApiEndpoints.s_surveys, _surveyToCreate);

        if(response.StatusCode == HttpStatusCode.Created) {
            SurveyModel addedSurvey = await response.Content.ReadFromJsonAsync<SurveyModel>();
            databaseCache.Surveys.Add(addedSurvey);
            _createSuccessful = true;
        }
        else {
            _attempingToCreateFailed = true;
        }
        _attempingToCreate = false;
        StateHasChanged();
    }
}